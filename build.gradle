apply plugin: 'java'
apply plugin: 'maven'

group = 'tk.mybatis'
version = '1.0.0-SNAPSHOT'

description = """"""

sourceCompatibility = 1.5
targetCompatibility = 1.5
tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}



repositories {
        
     maven { url "http://repo.maven.apache.org/maven2" }
}
dependencies {
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-web', version:'1.3.0.RELEASE'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-jdbc', version:'1.3.0.RELEASE'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-aop', version:'1.3.0.RELEASE'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-freemarker', version:'1.3.0.RELEASE'
    compile(group: 'org.springframework.boot', name: 'spring-boot-starter-test', version:'1.3.0.RELEASE') {
exclude(module: 'commons-logging')
    }
    compile group: 'mysql', name: 'mysql-connector-java', version:'5.1.37'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version:'2.6.3'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version:'2.6.3'
    compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-joda', version:'2.6.3'
    compile group: 'com.fasterxml.jackson.module', name: 'jackson-module-parameter-names', version:'2.6.3'
    compile group: 'com.alibaba', name: 'druid', version:'1.0.11'
    compile group: 'org.mybatis', name: 'mybatis', version:'3.3.1'
    compile group: 'org.mybatis', name: 'mybatis-spring', version:'1.2.4'
    compile group: 'org.mybatis.generator', name: 'mybatis-generator-core', version:'1.3.2'
    compile group: 'com.github.pagehelper', name: 'pagehelper', version:'4.1.1'
    compile group: 'tk.mybatis', name: 'mapper', version:'3.3.6'
}

apply plugin: 'checkstyle'
repositories {  
  mavenCentral()  
}  
task checkstyle(type: Checkstyle) {
     source 'src'
     include '**/*.java'
     exclude '**/R.java'
     configFile new File(rootDir, "config/checkstyle/checkstyle.xml")
     // empty classpath
     classpath = files()
  }

apply plugin: 'findbugs'
repositories {  
  mavenCentral()  
}  
  
task findbugs(type: FindBugs) {   
    ignoreFailures = true  
    effort = "max"  
    reportLevel = "low"  
    classes = fileTree("build/classes/")
    source = fileTree('src')
    classpath = files()  
    reports {  
    xml {  
      destination "build/reports/findbugs/findbugs.xml"  
    }  
  }  
}  
